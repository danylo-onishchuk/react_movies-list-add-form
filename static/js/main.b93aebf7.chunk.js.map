{"version":3,"sources":["components/MovieCard/MovieCard.js","components/MoviesList/MoviesList.js","components/NewMovie/NewMovie.js","App.js","index.js"],"names":["MovieCard","title","description","imgUrl","imdbUrl","className","src","alt","href","defaultProps","MoviesList","movies","map","movie","key","imdbId","NewMovie","state","textValue","descriptionValue","imgUrlValue","imdbUrlValue","imdbIdValue","imgUrlBorder","imdbUrlBorder","visibleError1","visibleError2","validateUrl","url","test","validationImgUrl","value","setState","validationImdbUrl","this","submit","props","onSubmit","e","preventDefault","disabledButton","htmlFor","type","id","placeholder","onChange","target","required","style","border","role","hidden","disabled","React","Component","App","moviesFromServer","values","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.b93aebf7.chunk.js","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport './MovieCard.scss';\r\n\r\nexport const MovieCard = ({ title, description, imgUrl, imdbUrl }) => (\r\n  <div className=\"card\">\r\n    <div className=\"card-image\">\r\n      <figure className=\"image is-4by3\">\r\n        <img\r\n          src={imgUrl}\r\n          alt=\"Film logo\"\r\n        />\r\n      </figure>\r\n    </div>\r\n    <div className=\"card-content\">\r\n      <div className=\"media\">\r\n        <div className=\"media-left\">\r\n          <figure className=\"image is-48x48\">\r\n            <img\r\n              src=\"images/imdb-logo.jpeg\"\r\n              alt=\"imdb\"\r\n            />\r\n          </figure>\r\n        </div>\r\n        <div className=\"media-content\">\r\n          <p className=\"title is-8\">{title}</p>\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"content\">\r\n        {description}\r\n        <br />\r\n        <a href={imdbUrl}>IMDB</a>\r\n      </div>\r\n    </div>\r\n  </div>\r\n);\r\n\r\nMovieCard.propTypes = {\r\n  title: PropTypes.string.isRequired,\r\n  description: PropTypes.string,\r\n  imgUrl: PropTypes.string.isRequired,\r\n  imdbUrl: PropTypes.string.isRequired,\r\n};\r\n\r\nMovieCard.defaultProps = {\r\n  description: '',\r\n};\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport './MoviesList.scss';\r\nimport { MovieCard } from '../MovieCard';\r\n\r\nexport const MoviesList = ({ movies }) => (\r\n  <div className=\"movies\">\r\n    {movies.map(movie => (\r\n      <MovieCard key={movie.imdbId} {...movie} />\r\n    ))}\r\n  </div>\r\n);\r\n\r\nMoviesList.propTypes = {\r\n  movies: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      title: PropTypes.string.isRequired,\r\n      description: PropTypes.string,\r\n      imgUrl: PropTypes.string.isRequired,\r\n      imdbUrl: PropTypes.string.isRequired,\r\n    }),\r\n  ),\r\n};\r\n\r\nMoviesList.defaultProps = {\r\n  movies: [],\r\n};\r\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport './NewMovie.scss';\n\nexport class NewMovie extends React.Component {\n  state = {\n    textValue: '',\n    descriptionValue: '',\n    imgUrlValue: '',\n    imdbUrlValue: '',\n    imdbIdValue: '',\n    imgUrlBorder: 'solid gray 1px',\n    imdbUrlBorder: 'solid gray 1px',\n    visibleError1: true,\n    visibleError2: true,\n  };\n\n  validateUrl = (url) => {\n    // eslint-disable-next-line\n    const reg = /^((([A-Za-z]{3,9}:(?:\\/\\/)?)(?:[-;:&=+$,\\w]+@)?[A-Za-z0-9.-]+|(?:www\\.|[-;:&=+$,\\w]+@)[A-Za-z0-9.-]+)((?:\\/[+~%/.\\w-_]*)?\\??(?:[-+=&;%@.\\w_]*)#?(?:[.!/\\\\\\w]*))?)$/;\n\n    return reg.test(url);\n  }\n\n  validationImgUrl = (value) => {\n    if (!this.validateUrl(value)) {\n      this.setState({\n        imgUrlBorder: 'solid red 1px',\n        visibleError1: false,\n      });\n    } else {\n      this.setState({\n        imgUrlBorder: 'solid gray 1px',\n        visibleError1: true,\n      });\n    }\n  }\n\n  validationImdbUrl = (value) => {\n    if (!this.validateUrl(value)) {\n      this.setState({\n        imdbUrlBorder: 'solid red 1px',\n        visibleError2: false,\n      });\n    } else {\n      this.setState({\n        imdbUrlBorder: 'solid gray 1px',\n        visibleError2: true,\n      });\n    }\n  }\n\n  render() {\n    const { textValue, descriptionValue,\n      imgUrlValue, imdbUrlValue, imdbIdValue,\n      imgUrlBorder, imdbUrlBorder, visibleError1, visibleError2 } = this.state;\n    const { submit } = this.props;\n\n    return (\n      <>\n        <form\n          className=\"form\"\n          onSubmit={(e) => {\n            e.preventDefault();\n            submit(this.state);\n            this.setState({\n              textValue: '',\n              descriptionValue: '',\n              imgUrlValue: '',\n              imdbUrlValue: '',\n              imdbIdValue: '',\n              disabledButton: '',\n            });\n          }}\n        >\n          <label htmlFor=\"title\">\n            Title\n          </label>\n          <input\n            type=\"text\"\n            id=\"title\"\n            placeholder=\"Title\"\n            value={textValue}\n            onChange={e => (\n              this.setState({ textValue: e.target.value })\n            )}\n            required\n          />\n          <label htmlFor=\"description\">\n            Description\n          </label>\n          <input\n            type=\"text\"\n            id=\"description\"\n            placeholder=\"Description\"\n            value={descriptionValue}\n            onChange={e => (\n              this.setState({ descriptionValue: e.target.value })\n            )}\n          />\n          <label htmlFor=\"imgUrl\">\n            ImgUrl\n          </label>\n          <input\n            type=\"text\"\n            id=\"imgUrl\"\n            style={{ border: imgUrlBorder }}\n            placeholder=\"ImgUrl\"\n            value={imgUrlValue}\n            onChange={(e) => {\n              this.setState({ imgUrlValue: e.target.value });\n              this.validationImgUrl(e.target.value);\n            }}\n            required\n          />\n          <div\n            className=\"alert alert-danger\"\n            role=\"alert\"\n            hidden={visibleError1}\n          >\n            ^^^Error. Check it ^^^\n          </div>\n          <label htmlFor=\"imdbUrl\">\n            ImdbUrl\n          </label>\n          <input\n            type=\"text\"\n            id=\"imdbUrl\"\n            style={{ border: imdbUrlBorder }}\n            placeholder=\"ImdbUrl\"\n            value={imdbUrlValue}\n            onChange={(e) => {\n              this.setState({ imdbUrlValue: e.target.value });\n              this.validationImdbUrl(e.target.value);\n            }}\n            required\n          />\n          <div\n            className=\"alert alert-danger\"\n            role=\"alert\"\n            hidden={visibleError2}\n          >\n            ^^^Error. Check it ^^^\n          </div>\n          <label htmlFor=\"imdbId\">\n            ImdbId\n          </label>\n          <input\n            type=\"text\"\n            id=\"imdbId\"\n            placeholder=\"ImdbId\"\n            value={imdbIdValue}\n            onChange={e => (\n              this.setState({ imdbIdValue: e.target.value })\n            )}\n            required\n          />\n          <input\n            type=\"submit\"\n            value=\"Submit\"\n            disabled={((imgUrlBorder === 'solid gray 1px'\n            && imdbUrlBorder === 'solid gray 1px')\n              ? ''\n              : 'disabled'\n            )}\n          />\n        </form>\n      </>\n    );\n  }\n}\n\nNewMovie.propTypes = {\n  submit: PropTypes.func.isRequired,\n};\n","import React from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { NewMovie } from './components/NewMovie';\nimport moviesFromServer from './api/movies.json';\n\nexport class App extends React.Component {\n  state = {\n    movies: moviesFromServer,\n  };\n\n  submit = (values) => {\n    this.setState(state => ({\n      movies: [\n        ...state.movies,\n        {\n          title: values.textValue,\n          description: values.descriptionValue,\n          imgUrl: values.imgUrlValue,\n          imdbUrl: values.imdbUrlValue,\n          imdbId: values.imdbIdValue,\n        },\n      ],\n    }));\n  }\n\n  render() {\n    const { movies } = this.state;\n\n    return (\n      <div className=\"page\">\n        <div className=\"page-content\">\n          <MoviesList movies={movies} />\n        </div>\n        <div className=\"sidebar\">\n          <NewMovie submit={this.submit} />\n        </div>\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport 'bulma/css/bulma.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}